name: Run and Auto-Save Kali VNC Container

on:
  workflow_dispatch:

jobs:
  run-and-save-session:
    runs-on: ubuntu-latest
    timeout-minutes: 3600 # 6 hours

    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      SSH_PASS: ${{ secrets.SSH_PASS }}
      TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install and Connect to Tailscale
        run: |
          echo "Installing and connecting to Tailscale..."
          sudo apt-get update -y
          sudo apt-get install -y tailscale
          sudo tailscaled --state=mem: --socket=/tmp/tailscaled.sock &
          sudo tailscale --socket=/tmp/tailscaled.sock up --authkey=${TAILSCALE_AUTH_KEY} --accept-routes --accept-dns=false
          sudo tailscale status

      - name: Login to Docker Hub
        run: |
          echo "Logging in to Docker Hub..."
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: Pull and Run Container
        run: |
          IMAGE_NAME="$DOCKERHUB_USERNAME/kali_linux:autov1"
          echo "Pulling latest image: $IMAGE_NAME"
          docker pull "$IMAGE_NAME"

          echo "Starting container with full privileges..."
          docker run -d --name=kali-session \
            --privileged \
            --volume ~/shared_storage:/root/shared \
            "$IMAGE_NAME" tail -f /dev/null

      - name: Create Helper and Startup Scripts
        run: docker exec kali-session chmod +x /start.sh

      - name: Start Services and Auto-Save Process
        run: |
          echo "Executing '/start.sh' in the container to launch services..."
          docker exec kali-session bash /start.sh &

          (
            sleep 19800 # 5.5 hours in seconds
            echo "[Auto-Save] Committing container state..."
            docker commit kali-session "$DOCKERHUB_USERNAME/kali_linux:autov1"
            echo "[Auto-Save] Pushing new image to Docker Hub..."
            docker push "$DOCKERHUB_USERNAME/kali_linux:autov1"
            echo "[Auto-Save] Session state saved!"
          ) &

      - name: Display Info
        run: |
          echo "=============================================================="
          echo " SESSION IS READY"
          echo " SSH password stored in env var SSH_PASS for tmate access"
          echo "=============================================================="

      - name: Start detached tmate session (prints SSH & web URLs)
        run: |
          set -e
          sudo apt-get update -y
          sudo apt-get install -y tmate

          export TMATE_SOCK=/tmp/tmate.sock
          tmate -S $TMATE_SOCK new-session -d

          for i in $(seq 1 30); do
            SSH_URL=$(tmate -S $TMATE_SOCK display -p '#{tmate_ssh}')
            if [ -n "$SSH_URL" ]; then break; fi
            sleep 1
          done

          if [ -z "$SSH_URL" ]; then
            echo "tmate failed to start. Dumping diagnostics..."
            tmate -S $TMATE_SOCK show-messages || true
            exit 1
          fi

          echo "================= TMATE CONNECTION INFO ================="
          echo "SSH  : $SSH_URL"
          echo "WEB  : $(tmate -S $TMATE_SOCK display -p '#{tmate_web}')"
          echo "Tmate socket: $TMATE_SOCK"
          echo "You can connect now (use your ssh key or the printed URL)"
          echo "========================================================="

      - name: Keep Workflow Alive & Auto-Restart
        run: |
          set -e
          start_time=$(date +%s)
          max_runtime=$((5 * 60 * 60 + 30 * 60)) # 5h 30m

          trap 'echo "[Trap] SIGTERM caught. Saving session..."; \
                docker commit kali-session ${{ secrets.DOCKERHUB_USERNAME }}/kali_linux:autov1; \
                docker push ${{ secrets.DOCKERHUB_USERNAME }}/kali_linux:autov1; \
                curl -X POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer $GH_TOKEN" \
                  https://api.github.com/repos/${{ github.repository }}/actions/workflows/main.yml/dispatches \
                  -d "{\"ref\":\"main\"}"; \
                exit 0' TERM

          while true; do
            now=$(date +%s)
            uptime=$((now - start_time))
            echo "[$(date)] Uptime: $((uptime / 60)) minutes"

            if [ "$uptime" -ge "$max_runtime" ]; then
              echo "[$(date)] Restarting workflow (auto-trigger)..."
              docker commit kali-session ${{ secrets.DOCKERHUB_USERNAME }}/kali_linux:autov1
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/kali_linux:autov1
              curl -X POST \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer $GH_TOKEN" \
                https://api.github.com/repos/${{ github.repository }}/actions/workflows/main.yml/dispatches \
                -d '{"ref":"main"}'
              echo "Workflow re-triggered. Exiting this one..."
              exit 0
            fi
            sleep 60
          done
